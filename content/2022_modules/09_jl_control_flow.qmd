---
title: Control flow
description: Zoom
colordes: "#e86e0a"
slug: 09_jl_control_flow
weight: 9
execute:
  error: true
format: hugo
jupyter: julia-1.7
---

## Conditional statements

### If statements

```{.julia}
if <predicate>
    <some action>
end
```

- If the predicate evaluates to `true`, the body of the if statement gets evaluated,
- If the predicate evaluates to `false`, nothing happens.

{{<ex>}}
Example:
{{</ex>}}

```{julia}
function testsign1(x)
    if x >= 0
        println("x is positive")
    end
end
```
```{julia}
testsign1(3)
```
```{julia}
testsign1(0)
```
```{julia}
testsign1(-2)
```

{{<ex>}}
A few examples of predicates:
{{</ex>}}

```{.julia}
occursin("that", "this and that")
4 < 3
a != b
2 in 1:3
3 <= 4 && 4 > 5
3 <= 4 || 4 > 5
```

### If else statements

```{.julia}
if <predicate>
    <some action>
else
    <some other action>
end
```

- If the predicate evaluates to `true`, `<some action>` is done,
- If the predicate evaluates to `false`, `<some other action>` is done.

{{<ex>}}
Example:
{{</ex>}}

```{julia}
function testsign2(x)
    if x >= 0
        println("x is positive")
    else
        println("x is negative")
    end
end
```
```{julia}
testsign2(3)
```
```{julia}
testsign2(0)
```
```{julia}
testsign2(-2)
```

If else statements can be written in a compact format using the ternary operator:

```{.julia}
<predicate> ? <some action> : <some other action>
```

{{<ex>}}
In other words:
{{</ex>}}

```{.julia}
<predicate> ? <action if predicate returns true> : <action if predicate returns false>
```

{{<ex>}}
Example:
{{</ex>}}

```{julia}
function testsign2(x)
    x >= 0 ? println("x is positive") : println("x is negative")
end

testsign2(-2)
```

### If elseif else statements

```{.julia}
if <predicate1>
    <do if predicate1 true>
elseif <predicate2>
    <do if predicate1 false and predicate2 true>
else
    <do if predicate1 and predicate2 false>
end
```

{{<ex>}}
Example:
{{</ex>}}

```{julia}
function testsign3(x)
    if x > 0
        println("x is positive")
    elseif x == 0
        println("x is zero")
    else
        println("x is negative")
    end
end
```
```{julia}
testsign3(3)
```
```{julia}
testsign3(0)
```
```{julia}
testsign3(-2)
```

