#+title: Covid-19 in Julia
#+slug: covid

#+OPTIONS: toc:2

#+BEGIN_center
#+ATTR_HTML: :width 200
[[/img/workinprogress.svg]]
#+END_center

**** /Requirements/

#+BEGIN_box
For this workshop, you will need:

*1 - The current [[https://julialang.org/downloads/][Julia stable release]]*

Installation instructions can be found [[https://julialang.org/downloads/platform/][here]].

*2 - The packages: [[https://github.com/JuliaData/CSV.jl][CSV]], [[https://github.com/JuliaData/DataFrames.jl][DataFrames]], [[https://github.com/JuliaStats/TimeSeries.jl][TimeSeries]], [[https://github.com/JuliaPlots/Plots.jl][Plots]]*

#+BEGIN_export html
Packages can be installed with <span style="font-family: 'Source Code Pro', 'Lucida Console', monospace; font-size: 1.4rem; padding: 0.4rem; box-shadow: 0px 0px 3px rgba(0,0,0,0.3); border-radius: 5%; background-color: #f0f3f3; color: #000000">] add &lt;package&gt;</span>
#+END_export

*3 - Covid-19 data from the [[https://github.com/CSSEGISandData/COVID-19][Johns Hopkins University CSSE repository]]*

#+BEGIN_export html
Clone (<span style="font-family: 'Source Code Pro', 'Lucida Console', monospace; font-size: 1.4rem; padding: 0.4rem; box-shadow: 0px 0px 3px rgba(0,0,0,0.3); border-radius: 5%; background-color: #f0f3f3; color: #000000">git clone &lt;repo url&gt;</span>) or download and unzip the repository.<br><br>
#+END_export
#+END_box

* Preliminary steps

**** Load packages

Choose the [[https://gr-framework.org/][GR framework]] as a backend for Plots.

#+BEGIN_src julia
using CSV
using DataFrames
using Dates          # from the standard Julia library
using TimeSeries
using NamedArrays
using Plots
gr()
#+END_src

**** Load the data

/If you did not clone or download and unzip the Covid-19 data repository in your working directory, adapt the path consequently./

#+BEGIN_src julia
dir = "COVID-19/csse_covid_19_data/csse_covid_19_time_series"

list = joinpath.(relpath(dir), readdir(dir))

# Read in 3 csv files with confirmed, dead, and recovered numbers
dat = DataFrame.(CSV.File.(list[collect(1:3)]))
#+END_src

**** Clean the data and put it in long format

#+BEGIN_src julia
DataFrames.rename!.(dat, Dict.(1 => Symbol("province"),
                               2 => Symbol("country")))

var = ["total", "dead", "recovered"]

datlong = map((x, y) -> stack(x, Not(collect(1:4)),
                              variable_name = Symbol("date"),
                    value_name = Symbol("$y")),
     dat, var)

all = join(datlong[1], datlong[2], datlong[3],
           on = [:date, :country, :province, :Lat, :Long])

select!(all, [4, 3, 1, 2, 7, 8])

all.date = Date.(replace.(string.(all[:, 3]),
                          r"(.*)(..)$" => s"\g<1>20\2"), "m/dd/yy");

replace!(all.province, missing => "NA");
#+END_src

**** Calculate the number of currently ill individuals

#+BEGIN_src julia
all.current = all.total .- all.dead .- all.recovered;
#+END_src

* Plotting

** World summary

#+BEGIN_src julia
world = by(all, :date,
           total = :total => sum,
           dead = :dead => sum,
           recovered = :recovered => sum,
           current = :current => sum)

plot(TimeArray(world, timestamp = :date),
     title = "World",
     legend = :outertopright,
     widen = :false)
           #+END_src

#+ATTR_HTML: :alt plot
[[/plot/workshop/covid/world.png]]

